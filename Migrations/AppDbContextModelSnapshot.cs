// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using sge_api.Data;

#nullable disable

namespace sge_api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("sge_api.Models.CodigosVerificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo");

                    b.Property<DateTime>("Expiracion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expiracion");

                    b.Property<DateTime>("FechaGeneracion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_generacion");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tipo");

                    b.Property<bool>("Usado")
                        .HasColumnType("boolean")
                        .HasColumnName("usado");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("codigos_verificacion");
                });

            modelBuilder.Entity("sge_api.Models.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ApellidoMaterno")
                        .HasColumnType("text")
                        .HasColumnName("apellido_materno");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("apellido_paterno");

                    b.Property<string>("Direccion")
                        .HasColumnType("text")
                        .HasColumnName("direccion");

                    b.Property<string>("EmailCorporativo")
                        .HasColumnType("text")
                        .HasColumnName("email_corporativo");

                    b.Property<string>("EmailPersonal")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email_personal");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer")
                        .HasColumnName("empresa_id");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_nacimiento");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_registro");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("genero");

                    b.Property<string>("NumeroIdentificacion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("numero_identificacion");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("primer_nombre");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("text")
                        .HasColumnName("segundo_nombre");

                    b.Property<string>("Telefono")
                        .HasColumnType("text")
                        .HasColumnName("telefono");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tipo_documento");

                    b.HasKey("Id");

                    b.ToTable("empleado");
                });

            modelBuilder.Entity("sge_api.Models.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ciudad")
                        .HasColumnType("text")
                        .HasColumnName("ciudad");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("direccion");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("Fecha_Fundacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_fundacion");

                    b.Property<DateTime>("Fecha_Registro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_registro");

                    b.Property<string>("Logo_URL")
                        .HasColumnType("text")
                        .HasColumnName("logo_url");

                    b.Property<string>("Nombre_Comercial")
                        .HasColumnType("text")
                        .HasColumnName("nombre_comercial");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("pais");

                    b.Property<string>("RUC")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ruc");

                    b.Property<string>("Razon_Social")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("razon_social");

                    b.Property<string>("Sector")
                        .HasColumnType("text")
                        .HasColumnName("sector");

                    b.Property<string>("Sitio_Web")
                        .HasColumnType("text")
                        .HasColumnName("sitio_web");

                    b.Property<string>("Telefono")
                        .HasColumnType("text")
                        .HasColumnName("telefono");

                    b.Property<string>("Tipo_Empresa")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tipo_empresa");

                    b.HasKey("Id");

                    b.ToTable("empresa");
                });

            modelBuilder.Entity("sge_api.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Bloqueado")
                        .HasColumnType("boolean")
                        .HasColumnName("bloqueado");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("integer")
                        .HasColumnName("empleado_id");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("estado");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_registro");

                    b.Property<DateTime?>("FechaUltimoLogin")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_ultimo_login");

                    b.Property<int>("IntentosFallidos")
                        .HasColumnType("integer")
                        .HasColumnName("intentos_fallidos");

                    b.Property<string>("NumeroIdentificacion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("numero_identificacion");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password_hash");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("usuario");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("sge_api.Models.CodigosVerificacion", b =>
                {
                    b.HasOne("sge_api.Models.Users", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("sge_api.Models.Users", b =>
                {
                    b.HasOne("sge_api.Models.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");
                });
#pragma warning restore 612, 618
        }
    }
}
